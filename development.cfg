[buildout]
extends = base.cfg versions.cfg
parts += docs
show-picked-versions = true
update-versions-file = versions.cfg

[sources]
openprocurement.api = git ${remotes:gh}openprocurement/openprocurement.api.git pushurl=${remotes:gh_push}openprocurement/openprocurement.api.git branch=ea_production
openprocurement.auctions.core = git ${remotes:gh}openprocurement/openprocurement.auctions.core.git pushurl=${remotes:gh_push}openprocurement/openprocurement.auctions.core.git branch=a499878011598746_separeted_awarding
openprocurement.auctions.flash = git ${remotes:gh}openprocurement/openprocurement.auctions.flash.git pushurl=${remotes:gh_push}openprocurement/openprocurement.auctions.flash.git branch=a499878011598746_separeted_awarding
openprocurement.auctions.dgf = git ${remotes:gh}openprocurement/openprocurement.auctions.dgf.git pushurl=${remotes:gh_push}openprocurement/openprocurement.auctions.dgf.git branch=a499878011598746_separeted_awarding
openprocurement.auctions.insider = git ${remotes:gh}openprocurement/openprocurement.auctions.insider.git pushurl=${remotes:gh_push}openprocurement/openprocurement.auctions.insider.git branch=a499878011598746_separeted_awarding
openprocurement.chronograph = git ${remotes:gh}openprocurement/openprocurement.chronograph.git pushurl=${remotes:gh_push}openprocurement/openprocurement.chronograph.git branch=auctions_dev
openprocurement.concord = git ${remotes:gh}openprocurement/openprocurement.concord.git pushurl=${remotes:gh_push}openprocurement/openprocurement.concord.git


[scripts]
eggs +=
    nose
    WebTest
    coverage
    repoze.profile
scripts +=
    pserve
    nosetests

[circus.ini]
webapp =
chronograph =

[openprocurement.api.ini]
debug = true

[chronograph.ini]
debug = true

[docs]
recipe = collective.recipe.sphinxbuilder
eggs =
    ${buildout:package-name}
    sphinxcontrib-httpdomain
source =
    ${buildout:directory}/src/openprocurement.api/docs/source

